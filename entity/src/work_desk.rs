//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Deserialize, Serialize)]
#[sea_orm(table_name = "work_desks")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub floor_id: i32,
    pub name: String,
    pub location_x: Option<i32>,
    pub location_y: Option<i32>,
    pub is_available: bool,
    #[sea_orm(extra="DEFAULT CURRENT_TIMESTAMP")]
    pub created_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::delivery_center_floor::Entity",
        from = "Column::FloorId",
        to = "super::delivery_center_floor::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    DeliveryCenterFloor,
}

impl Related<super::delivery_center_floor::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DeliveryCenterFloor.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
