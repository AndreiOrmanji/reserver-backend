//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Deserialize, Serialize)]
#[sea_orm(table_name = "delivery_center_floors")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub delivery_center_id: i32,
    #[sea_orm(extra="DEFAULT CURRENT_TIMESTAMP")]
    pub created_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::delivery_center::Entity",
        from = "Column::DeliveryCenterId",
        to = "super::delivery_center::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    DeliveryCenters,
    #[sea_orm(has_many = "super::work_desk::Entity")]
    WorkDesks,
}

impl Related<super::delivery_center::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DeliveryCenters.def()
    }
}

impl Related<super::work_desk::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::WorkDesks.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
